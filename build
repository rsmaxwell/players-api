#!/bin/bash

export GOPATH=${WORKSPACE}

rm -rf ${WORKSPACE}/bin/*

TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

find . -name "version.go" | while read versionfile; do

    echo "Replacing tags in ${versionfile}"

    sed -i "s@<BUILD_ID>@${BUILD_ID}@g"     ${versionfile}
    sed -i "s@<TIMESTAMP>@${TIMESTAMP}@g"   ${versionfile}
    sed -i "s@<GIT_COMMIT>@${GIT_COMMIT}@g" ${versionfile}
    sed -i "s@<GIT_BRANCH>@${GIT_BRANCH}@g" ${versionfile}
    sed -i "s@<GIT_URL>@${GIT_URL}@g"       ${versionfile}
done

mkdir -p ${WORKSPACE}/bin
result=$?
if [ ! ${result} == 0 ]; then
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    exit 1
fi

echo '{}' | jq --arg foo "${BUILD_ID}"   '. + {version: $foo}'   > temp1
cat temp1 | jq --arg foo "${TIMESTAMP}"  '. + {buildDate: $foo}' > temp2
cat temp2 | jq --arg foo "${GIT_COMMIT}" '. + {gitCommit: $foo}' > temp3
cat temp3 | jq --arg foo "${GIT_BRANCH}" '. + {gitBranch: $foo}' > temp4
cat temp4 | jq --arg foo "${GIT_URL}"    '. + {gitURL: $foo}'    > ${WORKSPACE}/bin/version.json

rm -rf temp*
result=$?
if [ ! ${result} == 0 ]; then
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    exit 1
fi

go get -d ./...
go install ./...